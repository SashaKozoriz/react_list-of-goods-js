{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isReverse","setIsReverse","reset","setReset","hadResetButton","goods","filteredGoods","sort","good1","good2","localeCompare","length","reverse","getFilteredGoods","className","onClick","type","classNames","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAIIC,EAAoB,SA0BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACMC,GAAkBJ,GAAaF,EAE/BO,EA9BR,SAA0BA,EAA1B,GAA4D,IAAzBP,EAAwB,EAAxBA,UAAWE,EAAa,EAAbA,UACxCM,EAAa,YAAOD,GAoBxB,OAlBIC,GACFA,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQX,GACN,IAAK,MACH,OAAOU,EAAME,cAAcD,GAC7B,IAAK,SACH,OAAOD,EAAMG,OAASF,EAAME,OAIhC,OAAO,KAIPX,IACFM,EAAgBA,EAAcM,WAGzBN,EASOO,CAAiBnB,EAAiB,CAAEI,YAAWE,cAuB7D,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAzByB,WAC/BhB,EApC0B,OAqC1BI,GAAS,IAwBHa,KAAK,SACLF,UAAWG,IAAW,kBAAD,OA9DD,QAgEhBnB,EAAsC,GAAK,aALjD,iCAYA,wBACEiB,QAhCmB,WACzBhB,EAAaJ,GACbQ,GAAS,IA+BHa,KAAK,SACLF,UAAWG,IAAW,qBAAD,OAEjBnB,IAAcH,EAAoB,GAAK,aAL7C,4BAYA,wBACEoB,QAAS,WAhCfZ,EAASC,GACTH,GAAcD,IAkCRgB,KAAK,SACLF,UAAWG,IAAW,qBAAD,OACGjB,EAAyB,GAAb,aANtC,qBAYCE,GACC,wBACEa,QApDU,WAClBhB,EAAa,IACbE,GAAa,GACbE,GAAS,IAkDDa,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGT,EAAMa,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OAERL,UAAU,OAHZ,SAKGK,GAHIA,YC7HjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c907f865.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABETIC = 'abc';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getFilteredGoods(goods, { sortField, isReverse }) {\n  let filteredGoods = [...goods];\n\n  if (filteredGoods) {\n    filteredGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case 'abc':\n          return good1.localeCompare(good2);\n        case 'length':\n          return good1.length - good2.length;\n        default:\n      }\n\n      return 0;\n    });\n  }\n\n  if (isReverse) {\n    filteredGoods = filteredGoods.reverse();\n  }\n\n  return filteredGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n  const [reset, setReset] = useState(false);\n  const hadResetButton = !isReverse || sortField;\n\n  const goods = getFilteredGoods(goodsFromServer, { sortField, isReverse });\n\n  const handleSortAlphabetically = () => {\n    setSortField(SORT_FIELD_ALPHABETIC);\n    setReset(true);\n  };\n\n  const handleSortByLength = () => {\n    setSortField(SORT_FIELD_LENGTH);\n    setReset(true);\n  };\n\n  const handleReset = () => {\n    setSortField('');\n    setIsReverse(false);\n    setReset(false);\n  };\n\n  const handleReverse = () => {\n    setReset(hadResetButton);\n    setIsReverse(!isReverse);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={handleSortAlphabetically}\n          type=\"button\"\n          className={classNames(\n            `button is-info ${\n              sortField === SORT_FIELD_ALPHABETIC ? '' : 'is-light'\n            }`,\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={handleSortByLength}\n          type=\"button\"\n          className={classNames(\n            `button is-success ${\n              sortField === SORT_FIELD_LENGTH ? '' : 'is-light'\n            }`,\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            handleReverse();\n          }}\n          type=\"button\"\n          className={classNames(\n            `button is-warning ${!isReverse ? 'is-light' : ''}`,\n          )}\n        >\n          Reverse\n        </button>\n\n        {reset && (\n          <button\n            onClick={handleReset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n            className=\"good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}